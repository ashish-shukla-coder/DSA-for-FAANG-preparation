# Invert Binary Tree
# Given the root of a binary tree, invert the tree, and return its root.
# Example 1:
# Input: root = [4,2,7,1,3,6,9]
# Output: [4,7,2,9,6,3,1]


    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:      
        if (root == None):
            return 
        queue = []
        queue.append(root)
        while (len(queue)):
            curr = queue[0]
            queue.pop(0)
            curr.left, curr.right = curr.right, curr.left
            if (curr.left):
                queue.append(curr.left)
            if (curr.right):
                queue.append(curr.right)
        return root
